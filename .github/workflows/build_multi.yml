on:
  workflow_call:
    inputs:
      project_id:
        required: true
        type: string
      builds:
        required: true
        type: string
        # JSON array: [{"dockerfile":".infra/Dockerfile","appname":"api","context":"."},{"dockerfile":".infra/Dockerfile.web","appname":"web","context":"./web"}]
      name:
        required: false
        type: string
    secrets:
      gcp_provider:
        required: true
      args:
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    strategy:
      matrix:
        include: ${{ fromJson(inputs.builds) }}

    steps:
      - uses: actions/checkout@v4

      # sanitise repo name for docker image, or use provided input name
      - name: Set env
        run: |
          IMAGE_NAME=""
          INPUT_NAME="${{ inputs.name }}"

          if [ -n "$INPUT_NAME" ]; then
            IMAGE_NAME="$INPUT_NAME"
          else
            RAW_NAME="${{ github.event.repository.name }}"
            SANITIZED_NAME=$(echo "${RAW_NAME}" | tr '[:upper:]' '[:lower:]' | sed -E 's/[^a-z0-9._-]+/-/g' | sed -E 's/^-+|-+$//g')
            IMAGE_NAME="$SANITIZED_NAME"
          fi
          echo "NAME=${IMAGE_NAME}" >> $GITHUB_ENV

          echo "REGISTRY=${{ vars.REGION }}-docker.pkg.dev/${{ inputs.project_id }}/${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Authenticate GCP
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: '${{ secrets.gcp_provider }}'
          project_id: '${{ inputs.project_id}}'

      - run: gcloud auth configure-docker ${{ vars.REGION }}-docker.pkg.dev

      - name: Build Docker Image
        shell: bash
        run: |
          docker build --network=host --pull \
            -t "${{ env.REGISTRY }}/${{ env.NAME }}-${{ matrix.appname }}:${{ github.sha }}" \
            -f ${{ matrix.dockerfile }} \
            --build-arg BRANCH="${{ github.ref_name }}" \
            --build-arg REGISTRY="${{ env.REGISTRY }}" \
            ${{ secrets.args }} \
            ${{ matrix.context }}
          docker tag "${{ env.REGISTRY }}/${{ env.NAME }}-${{ matrix.appname }}:${{ github.sha }}" "${{ env.REGISTRY }}/${{ env.NAME }}-${{ matrix.appname }}:${{ github.ref_name }}"

      - name: Push Docker Image
        shell: bash
        run: |
          docker push "${{ env.REGISTRY }}/${{ env.NAME }}-${{ matrix.appname }}:${{ github.sha }}"
          docker push "${{ env.REGISTRY }}/${{ env.NAME }}-${{ matrix.appname }}:${{ github.ref_name }}"
          echo "### Image tag: `${{ github.sha }}`" >> $GITHUB_STEP_SUMMARY
