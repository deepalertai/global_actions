on:
  workflow_call:
    inputs:
      namespace_prefix:
        type: string
      namespace_postfix:
        type: string
      deployment:
        type: string
      deployments:
        type: string
      controller:
        type: string
        default: "deployment"

    secrets:
      kube_token:
        required: true
      kube_server:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
        contents: write

    steps:
      - name: Configure env variables
        shell: bash
        run: |
          # use formatted repo name or provided deployment name
          DEFAULT_DEPLOYMENT=$(basename "${{ github.event.repository.name }}" | tr -d '0-9' | tr '_' '-')
          INPUT_DEPLOYMENT="${{ inputs.deployment }}"
          DEPLOYMENT_NAME="${INPUT_DEPLOYMENT:-$DEFAULT_DEPLOYMENT}"
          echo "DEPLOYMENT_NAME=$DEPLOYMENT_NAME" >> $GITHUB_ENV

          PREFIX=${{ inputs.namespace_prefix || 'deepalert' }}
          echo "PREFIX=$PREFIX" >> $GITHUB_ENV

          # rename dev to staging
          if [[ "${{ inputs.namespace_postfix }}" ]]; then
            echo "DEPLOY_ENV=${{ inputs.namespace_postfix }}" >> $GITHUB_ENV
          elif [[ "${{ github.ref_name }}" == "dev" ]]; then
            echo "DEPLOY_ENV=staging" >> $GITHUB_ENV
          else
            echo "DEPLOY_ENV=${{ github.ref_name }}" >> $GITHUB_ENV
          fi

      - name: Restart deployment
        if: ${{ inputs.deployments == '' && env.DEPLOYMENT_NAME != '' }}
        shell: bash
        run: |
           echo $DEPLOYMENT_NAME

      - name: Restart deployments
        if: ${{ inputs.deployments != '' }}
        shell: bash
        run: |
          echo "${{ inputs.deployments }}"
          for deployment in $(echo "${{ inputs.deployments }}" | jq -r '.[]'); do
            echo "$deployment"
          done
