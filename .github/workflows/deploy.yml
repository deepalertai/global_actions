on:
  workflow_call:
    inputs:
      namespace_prefix:
        type: string
      deployment:
        type: string
    secrets:
      kube_token:
        required: true
      kube_server:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest-m
    permissions:
        contents: write

    steps:
      - name: Configure env variables
        shell: bash
        run: |
          # use repo name or provided deployment name
          DEFAULT_DEPLOYMENT=$(basename "${{ github.event.repository.name }}" | tr '_' '-')
          INPUT_DEPLOYMENT="${{ inputs.deployment }}"
          DEPLOYMENT_NAME="${INPUT_DEPLOYMENT:-$DEFAULT_DEPLOYMENT}"
          echo "DEPLOYMENT_NAME=$DEPLOYMENT_NAME" >> $GITHUB_ENV

          PREFIX=${{ inputs.namespace_prefix || 'deepalert' }}
          echo "PREFIX=$PREFIX" >> $GITHUB_ENV

      - name: "TODO: enable deployments"
        run: |
          if [[ "${{ github.ref_name }}" == "dev" ]]; then
            echo "DEPLOY_ENV=staging" >> $GITHUB_ENV
          else
            echo "DEPLOY_ENV=${{ github.ref_name }}" >> $GITHUB_ENV
          fi

      - name: Configure kubectl authentication
        shell: bash
        run: |
          kubectl config set-cluster github-actions \
            --server=${{ secrets.kube_server }} \
            --insecure-skip-tls-verify=true
          kubectl config set-credentials github-actions \
            --token=${{ secrets.kube_token }}
          kubectl config set-context github-actions \
            --cluster=github-actions \
            --user=github-actions \

          kubectl config use-context github-actions
          kubectl auth can-i get deployments -n ${{ env.PREFIX }}-${{ env.DEPLOY_ENV }}

      # - name: Restart Kubernetes deployment
      #   shell: bash
      #   run: |
      #     kubectl rollout restart deployment/${{ env.DEPLOYMENT_NAME }}  -n ${{ env.PREFIX }}-${{ github.ref_name }}
