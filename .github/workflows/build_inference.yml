# runs on ubuntu-latest-m for larger inference builds

on:
  workflow_call:
    inputs:
      project_id:
        required: true
        type: string
    secrets:
      gcp_provider:
        required: true
      args:
        required: false

jobs:
  build-inference:
    runs-on: ubuntu-latest-m
    permissions:
      contents: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
      - name: Pull LFS files
        run: |
          git lfs install
          git lfs pull

      - name: Get registry
        run: |
          echo "REGISTRY=${{ vars.REGION }}-docker.pkg.dev/${{ inputs.project_id }}/${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Authenticate GCP
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: '${{ secrets.gcp_provider }}'
          project_id: '${{ inputs.project_id}}'

      - name: Configure Docker Authentication
        run: gcloud auth configure-docker ${{ vars.REGION }}-docker.pkg.dev

      - name: Build Docker Image
        shell: bash
        run: |
          docker build --network=host --pull -t "${{ env.REGISTRY }}/${{ github.event.repository.name }}:${{ github.sha }}" -f .infra/Dockerfile --build-arg BRANCH="${{ github.ref_name }}" --build-arg REGISTRY="${{ env.REGISTRY }}" ${{ secrets.args }} .
          docker tag "${{ env.REGISTRY }}/${{ github.event.repository.name }}:${{ github.sha }}" "${{ env.REGISTRY }}/${{ github.event.repository.name }}:${{ github.ref_name }}"

      - name: Push Docker Image
        shell: bash
        run: |
          docker push "${{ env.REGISTRY }}/${{ github.event.repository.name }}:${{ github.sha }}"
          docker push "${{ env.REGISTRY }}/${{ github.event.repository.name }}:${{ github.ref_name }}"
          {
            echo "## Image tag"
            echo ""
            echo '```'
            echo "${{ github.sha }}"
            echo '```'
          } >> $GITHUB_STEP_SUMMARY